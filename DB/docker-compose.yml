version: "3.8"

services:
  ipfs:
    image: ipfs/go-ipfs:latest
    environment:
      - IPFS_PROFILE=server
      - IPFS_PATH=/ipfsdata
    volumes:
      - ./data/ipfs:/ipfsdata
    ports:
      - "4001:4001"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8083:8081"
      - "127.0.0.1:5003:5001"
    networks:
      - default

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    restart: always
    ports:
      - 9870:9870
      - 9001:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - default

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9864:9864"
    networks:
      - default

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    environment:
      - SERVICE_PRECONDITION=namenode:9000 namenode:9870 datanode:9864
    networks:
      - default

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    environment:
      - SERVICE_PRECONDITION=namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088
    networks:
      - default

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    restart: always
    environment:
      - SERVICE_PRECONDITION=namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    networks:
      - default

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    depends_on:
      - namenode
      - datanode
    ports:
      - "8082:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - default

  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - default

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    depends_on:
      - namenode
      - datanode
    environment:
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore
      - SERVICE_PRECONDITION=hive-metastore:9083
    ports:
      - "10000:10000"
    networks:
      - default
    volumes:
      - ./hive-entrypoint.sh:/hive-entrypoint.sh
    entrypoint: ["/hive-entrypoint.sh"]


  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    command: /opt/hive/bin/hive --service metastore
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 hive-metastore-postgresql:5432
    ports:
      - "9083:9083"
    networks:
      - default

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    networks:
      - default

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    ports:
      - "8089:8089"
    networks:
      - default

  db_engine:
    build:
      context: .
      dockerfile: db_engine/Dockerfile
    image: flask-ipfs-app
    restart: unless-stopped
    ports:
      - 3001:3001
    environment:
      - IPFS_API_URL=http://ipfs:5001
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - ipfs
      - spark-master
      - hive-server
      - hive-metastore
    networks:
      - default

networks:
  default:
    driver: overlay

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  ipfs_data:
